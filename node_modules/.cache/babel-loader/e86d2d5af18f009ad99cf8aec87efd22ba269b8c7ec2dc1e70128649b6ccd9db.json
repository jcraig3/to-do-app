{"ast":null,"code":"var _jsxFileName = \"/Users/jaydencraig/school/CMSI-Interaction_Design/reactApp/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const addTask = () => {\n    const taskValue = document.querySelector(\".task-input\").value;\n    const task = {\n      value: taskValue,\n      isComplete: false\n    };\n    const newTasks = [...tasks, task];\n    setTasks(newTasks);\n    console.log(\"tasks: \", newTasks);\n  };\n  const deleteTask = taskIndex => {\n    const currentTasks = [...tasks];\n    const updatedTasks = currentTasks.filter((task, idx) => idx !== taskIndex);\n    setTasks(updatedTasks);\n  };\n  const markAsCompleted = taskIndex => {\n    const currentTasks = [...tasks];\n    const completedTaskIndex = currentTasks.findIndex((task, idx) => idx === taskIndex);\n    currentTasks[completedTaskIndex] = {\n      ...currentTasks[completedTaskIndex],\n      isComplete: true\n    };\n    setTasks(currentTasks);\n  };\n  const incompleteTasks = tasks.filter(task => !task.isComplete);\n  const completeTasks = tasks.filter(task => task.isComplete);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"task-input\",\n          type: \"text\",\n          placeholder: \"Enter a task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-container\",\n        children: tasks.map((task, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            children: [task.value, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => markAsCompleted(idx),\n              children: \"Mark As Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(idx),\n              children: \"Delete Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, task, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"completed-tasks-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","addTask","taskValue","document","querySelector","value","task","isComplete","newTasks","console","log","deleteTask","taskIndex","currentTasks","updatedTasks","filter","idx","markAsCompleted","completedTaskIndex","findIndex","incompleteTasks","completeTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["/Users/jaydencraig/school/CMSI-Interaction_Design/reactApp/my-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const addTask = () => {\n    const taskValue = document.querySelector(\".task-input\").value;\n    const task = {\n      value: taskValue,\n      isComplete: false,\n    };\n    const newTasks = [...tasks, task];\n    setTasks(newTasks);\n    console.log(\"tasks: \", newTasks);\n  };\n\n  const deleteTask = (taskIndex) => {\n    const currentTasks = [...tasks];\n    const updatedTasks = currentTasks.filter((task, idx) => idx !== taskIndex);\n    setTasks(updatedTasks);\n  };\n\n  const markAsCompleted = (taskIndex) => {\n    const currentTasks = [...tasks];\n    const completedTaskIndex = currentTasks.findIndex(\n      (task, idx) => idx === taskIndex\n    );\n    currentTasks[completedTaskIndex] = {\n      ...currentTasks[completedTaskIndex],\n      isComplete: true,\n    };\n    setTasks(currentTasks);\n  };\n\n  const incompleteTasks = tasks.filter((task) => !task.isComplete);\n  const completeTasks = tasks.filter((task) => task.isComplete);\n\n  return (\n    <div className=\"App\">\n      <h1>Task Manager</h1>\n      <div className=\"tasks-container\">\n        <div className=\"input-container\">\n          <input\n            className=\"task-input\"\n            type=\"text\"\n            placeholder=\"Enter a task\"\n          ></input>\n          <button onClick={addTask}>Add Task</button>\n        </div>\n        <div className=\"tasks-container\">\n          {tasks.map((task, idx) => {\n            return (\n              <div className=\"task\" key={task}>\n                {task.value}{\" \"}\n                <button onClick={() => markAsCompleted(idx)}>\n                  Mark As Completed\n                </button>\n                <button onClick={() => deleteTask(idx)}>Delete Task</button>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"completed-tasks-container\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}