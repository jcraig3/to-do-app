{"ast":null,"code":"var _jsxFileName = \"/Users/jaydencraig/school/CMSI-Interaction_Design/reactApp/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const updateNewTask = event => {\n    setNewTask(event.target.value);\n  };\n  const addTask = () => {\n    const task = {\n      value: newTask,\n      isComplete: false,\n      id: Date.now()\n    };\n    const newTasks = [...tasks, task];\n    setTasks(newTasks);\n    setNewTask(\"\");\n    console.log(\"tasks: \", newTasks);\n  };\n  const deleteTask = taskId => {\n    const currentTasks = [...tasks];\n    const updatedTasks = currentTasks.filter(({\n      id\n    }) => id !== taskId);\n    setTasks(updatedTasks);\n  };\n  const toggleCompleted = taskId => {\n    const currentTasks = [...tasks];\n    const taskIndex = currentTasks.findIndex(({\n      id\n    }) => id === taskId);\n    const taskAtIndexCompleted = currentTasks[taskIndex].isComplete;\n    currentTasks[taskIndex] = {\n      ...currentTasks[taskIndex],\n      isComplete: !taskAtIndexCompleted\n    };\n    setTasks(currentTasks);\n  };\n  const incompleteTasks = tasks.filter(({\n    isComplete\n  }) => !isComplete);\n  const completedTasks = tasks.filter(({\n    isComplete\n  }) => isComplete);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"task-input\",\n        type: \"text\",\n        placeholder: \"Enter a task\",\n        value: newTask,\n        onChange: updateNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-container incomplete-tasks-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-header\",\n        children: \"Incomplete Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), incompleteTasks.map(({\n        value,\n        id\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          children: [value, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleCompleted(id),\n            children: \"Mark as Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTask(id),\n            children: \"Delete Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-container completed-tasks-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-header\",\n        children: \"Completed Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), completedTasks.map(({\n        value,\n        id\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          children: [value, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleCompleted(id),\n            children: \"Mark as Incomplete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bioIcagx8AA9h6inwgA0NezF4sg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","updateNewTask","event","target","value","addTask","task","isComplete","id","Date","now","newTasks","console","log","deleteTask","taskId","currentTasks","updatedTasks","filter","toggleCompleted","taskIndex","findIndex","taskAtIndexCompleted","incompleteTasks","completedTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","_c","$RefreshReg$"],"sources":["/Users/jaydencraig/school/CMSI-Interaction_Design/reactApp/my-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n\n  const updateNewTask = (event) => {\n    setNewTask(event.target.value);\n  };\n\n  const addTask = () => {\n    const task = {\n      value: newTask,\n      isComplete: false,\n      id: Date.now(),\n    };\n    const newTasks = [...tasks, task];\n    setTasks(newTasks);\n    setNewTask(\"\");\n    console.log(\"tasks: \", newTasks);\n  };\n\n  const deleteTask = (taskId) => {\n    const currentTasks = [...tasks];\n    const updatedTasks = currentTasks.filter(({ id }) => id !== taskId);\n    setTasks(updatedTasks);\n  };\n\n  const toggleCompleted = (taskId) => {\n    const currentTasks = [...tasks];\n    const taskIndex = currentTasks.findIndex(({ id }) => id === taskId);\n    const taskAtIndexCompleted = currentTasks[taskIndex].isComplete;\n    currentTasks[taskIndex] = {\n      ...currentTasks[taskIndex],\n      isComplete: !taskAtIndexCompleted,\n    };\n    setTasks(currentTasks);\n  };\n\n  const incompleteTasks = tasks.filter(({ isComplete }) => !isComplete);\n  const completedTasks = tasks.filter(({ isComplete }) => isComplete);\n\n  return (\n    <div className=\"App\">\n      <h1>Task Manager</h1>\n      <div className=\"input-container\">\n        <input\n          className=\"task-input\"\n          type=\"text\"\n          placeholder=\"Enter a task\"\n          value={newTask}\n          onChange={updateNewTask}\n        />\n        <button onClick={addTask}>Add Task</button>\n      </div>\n      <div className=\"tasks-container incomplete-tasks-container\">\n        <div className=\"task-header\">Incomplete Tasks</div>\n        {incompleteTasks.map(({ value, id }) => {\n          return (\n            <div className=\"task\" key={id}>\n              {value}{\" \"}\n              <button onClick={() => toggleCompleted(id)}>\n                Mark as Completed\n              </button>\n              <button onClick={() => deleteTask(id)}>Delete Task</button>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"tasks-container completed-tasks-container\">\n        <div className=\"task-header\">Completed Tasks</div>\n        {completedTasks.map(({ value, id }) => {\n          return (\n            <div className=\"task\" key={id}>\n              {value}\n              <button onClick={() => toggleCompleted(id)}>\n                Mark as Incomplete\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}